import wollok.game.*
import teclado.*
import heroes.*
import movimiento.*
import enemigos.*
import turnos.*

//TESTS DE MOVIMIENTO Y POSICION
test "si el lider esta en la posicion (20, 3) y se mueve una vez para la derecha, el lider queda en la posicion (21, 3)" {
	lider.mover(derecha, 1)
	assert.equals(game.at(21, 3), lider.position())
}

test "si el lider esta en la posicion (20, 3) y se mueve una vez para la izquierda, el lider queda en la posicion (19, 3)" {
	lider.mover(izquierda, 1)
	assert.equals(game.at(19, 3), lider.position())
}

test "si el seguidor 1 esta en la posicion (14, 3) y se mueve una vez para la derecha, el lider queda en la posicion (15, 3)" {
	lider.mover(derecha, 1)
	assert.equals(game.at(15, 3), seguidor1.position())
}

//hay que hacer los nuevos los tests de la cantidad de danio\

test "Ataque del caballero al ectoplasma"{
	
	const caballero2 = new Caballero()
		
	turno.enemigo(ectoplasma)
	
	assert.equals(1000, ectoplasma.vida())	
	
	caballero2.atacar(cascotaso)
	
	assert.equals(985, ectoplasma.vida())	
}
test "Recibir ataque caballero ataque1malo"{
	
	const caballero2 = new Caballero()
		
	assert.equals(100, caballero2.vida())	
	
	caballero2.recibirAtaque(ataque1malo)
	
	assert.equals(93.33333, caballero2.vida())	
}

test "Ataque del doctor al ectoplasma"{
	
	const doctor2 = new Doctor()
		
	turno.enemigo(ectoplasma)
	
	assert.equals(1000, ectoplasma.vida())	
	
	doctor2.atacar(cascotaso)
	
	assert.equals(970, ectoplasma.vida())	
}
test "Recibir ataque doctor ataque1malo"{
	
	const doctor2 = new Doctor()
		
	assert.equals(100, doctor2.vida())	
	
	doctor2.recibirAtaque(ataque1malo)
	
	assert.equals(80, doctor2.vida())	
}
test "Ataque del leproso al ectoplasma"{
	
	const leproso2 = new Leproso()
		
	turno.enemigo(ectoplasma)
	
	assert.equals(1000, ectoplasma.vida())	
	
	leproso2.atacar(cascotaso)
	
	assert.equals(940, ectoplasma.vida())	
}
test "Recibir ataque leproso glotoneria"{
	
	const leproso2 = new Leproso()
		
	assert.equals(100, leproso2.vida())	
	
	leproso2.recibirAtaque(ataque1malo)
	
	assert.equals(80, leproso2.vida())	
}














